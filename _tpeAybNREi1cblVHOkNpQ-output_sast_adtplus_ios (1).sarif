{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1299.1","version" : "1.1299.1","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "javascript/ImproperCodeSanitization","name": "ImproperCodeSanitization","shortDescription": {"text": "Improper Code Sanitization"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "
## Details

Dynamic JavaScript code construction using string concatenation can be dangerous,
particularly if the input is constructed by an attacker, as it can lead to
code injection.

A developer might attempt to use `JSON.stringify` or HTML sanitizers to sanitize
a string inserted into the code, but these are not sufficient to sanitize
malicious inputs.

## Best practices for prevention

When using HTML sanitizers, or `JSON.stringify` to sanitize input to constructed
code, extra steps to remove/escape dangerous characters should be taken.

Examples of characters/sequences that should be escaped include:
* `<`
* `>`
* `\\b`
* `\\\\`
* `\\f`
* `\
`
* `\\r`
* `\\t`
* `\\0`
* `\\u2028`
* `\\u2029`

As these may allow an attacker to, for example, insert `</script>` to break out
of a script tag.","text": ""},"properties": {"tags": ["javascript","ImproperCodeSanitization","Security","Taint"],"categories": ["Security"],"exampleCommitFixes": [],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 0,"cwe": ["CWE-94","CWE-79","CWE-116"]}},{"id": "swift/HardcodedNonCryptoSecret","name": "HardcodedNonCryptoSecret","shortDescription": {"text": "Hardcoded Non-Cryptographic Secret"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details

When constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.
Another negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.

## Best practices for prevention
- Never hard code security-related constants; use symbolic names or configuration lookup files.
- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.
- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["swift","HardcodedNonCryptoSecret","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/kphrx/NowPlayingTweet/commit/eade714d8603807ae527765c948bbd849609690d?diff=split#diff-2da2dd34cbc37f57fa160697c37168193e0d740195a53574b5593c1328d6fb26L-1","lines": [{"line": "static let apiKey: String = \"uH6FFqSPBi1ZG80I6taO5xt24\"
","lineNumber": 11,"lineChange": "removed"},{"line": "static let apiSecret: String = \"0gIbzrGYW6CU2W3DoehwuLQz8SXojr8v5z5I2DaBPjm9kHbt16\"
","lineNumber": 12,"lineChange": "removed"},{"line": "let apiKey: String
","lineNumber": 11,"lineChange": "added"},{"line": "let apiSecret: String
","lineNumber": 12,"lineChange": "added"}]},{"commitURL": "https://github.com/WomenWhoCode/WomenWhoCodeSwift/commit/47f24d6424d786f8db26981e8765f74824e4169d?diff=split#diff-63d4e81d0baf4789e09666938de8d37f3815407a355c1e2e780bf3788c063fc4L-1","lines": [{"line": "consumerKey:    clientId,
","lineNumber": 45,"lineChange": "removed"},{"line": "consumerSecret: clientSecret,
","lineNumber": 46,"lineChange": "removed"},{"line": "consumerKey:    Constants.Api.Slack.clientId,
","lineNumber": 44,"lineChange": "added"},{"line": "consumerSecret: Constants.Api.Slack.clientSecret,
","lineNumber": 45,"lineChange": "added"}]},{"commitURL": "https://github.com/algolia/instantsearch-ios-examples/commit/26c1bfed175325a15e54ca810feaa4e5f31412a0?diff=split#diff-047ceca00eac1c48ac3362c87adcabdc81e9322fd413be027631df48617a0a57L-1","lines": [{"line": "let ALGOLIA_API_KEY = \"1f6fd3a6fb973cb08419fe7d288fa4db\"
","lineNumber": 16,"lineChange": "removed"},{"line": "let ALGOLIA_API_KEY = Bundle.main.infoDictionary![\"AlgoliaApiKey\"] as! String
","lineNumber": 16,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 9,"cwe": ["CWE-547"]}},{"id": "swift/NoHardcodedPasswords","name": "NoHardcodedPasswords","shortDescription": {"text": "Use of Hardcoded Passwords"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "
## Details

Developers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.

An attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.

## Best practices for prevention
* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.
* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.
* Prompt for a secure password on first login rather than hard-code a default password.
* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.
* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["swift","NoHardcodedPasswords","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/modcloth-labs/XBot/commit/85acb90bdde45f6923702f82b32dbb84fbb322ec?diff=split#diff-3cf402b3e16c17bb9e6a183a2076dc40f0cfe72bb62bd570cf8976e6fd98ebceL-1","lines": [{"line": "    public let address = \"10.3.10.64\"
","lineNumber": 12,"lineChange": "removed"},{"line": "    public let port = \"20343\"
","lineNumber": 13,"lineChange": "removed"},{"line": "    public let user = \"xcode_bot\"
","lineNumber": 14,"lineChange": "removed"},{"line": "    public let password = \"Disco1990\"
","lineNumber": 15,"lineChange": "removed"},{"line": "
","lineNumber": 16,"lineChange": "removed"},{"line": "    public init() {
","lineNumber": 17,"lineChange": "removed"},{"line": "    public var port:String
","lineNumber": 12,"lineChange": "added"},{"line": "    public var host:String
","lineNumber": 13,"lineChange": "added"},{"line": "    public var user:String
","lineNumber": 14,"lineChange": "added"},{"line": "    public var password:String
","lineNumber": 15,"lineChange": "added"},{"line": "
","lineNumber": 18,"lineChange": "none"},{"line": "    public init(host:String, user:String, password:String, port:String = \"20343\") {
","lineNumber": 17,"lineChange": "added"},{"line": "        self.host = host
","lineNumber": 18,"lineChange": "added"},{"line": "        self.user = user
","lineNumber": 19,"lineChange": "added"},{"line": "        self.password = password
","lineNumber": 20,"lineChange": "added"},{"line": "        self.port = port
","lineNumber": 21,"lineChange": "added"}]},{"commitURL": "https://github.com/k3zi/kotu.kez.io/commit/43b947166378c0550f47974844af8a69f8408b69?diff=split#diff-d04000137159a9b20b1e338397496b245e4e24ea84998cd2cafa01c1056f39deL-1","lines": [{"line": "hostname: Environment.get(\"DATABASE_HOST\") ?? \"localhost\",
","lineNumber": 12,"lineChange": "removed"},{"line": "port: Environment.get(\"DATABASE_PORT\").flatMap(Int.init(_:)) ?? PostgresConfiguration.ianaPortNumber,
","lineNumber": 13,"lineChange": "removed"},{"line": "username: Environment.get(\"DATABASE_USERNAME\") ?? \"vapor_username\",
","lineNumber": 14,"lineChange": "removed"},{"line": "password: Environment.get(\"DATABASE_PASSWORD\") ?? \"vapor_password\",
","lineNumber": 15,"lineChange": "removed"},{"line": "database: Environment.get(\"DATABASE_NAME\") ?? \"vapor_database\"
","lineNumber": 16,"lineChange": "removed"},{"line": "hostname: \"localhost\",
","lineNumber": 12,"lineChange": "added"},{"line": "port: PostgresConfiguration.ianaPortNumber,
","lineNumber": 13,"lineChange": "added"},{"line": "username: Config.shared.databaseUsername,
","lineNumber": 14,"lineChange": "added"},{"line": "password: Config.shared.databasePassword,
","lineNumber": 15,"lineChange": "added"},{"line": "database: Config.shared.databaseName
","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/marlonjames71/MiWiFi/commit/6b229948c8f1464453b9e55c30aa5e36acec072e?diff=split#diff-23985f9d27b328dcf3bf4152dec07a1aa2543fab0882f612c3e35feee42537d7L-1","lines": [{"line": "nameTextField.text = wifi.name
","lineNumber": 198,"lineChange": "removed"},{"line": "wifiNameTextField.text = wifi.wifiName
","lineNumber": 199,"lineChange": "removed"},{"line": "passwordTextField.text = wifi.password
","lineNumber": 200,"lineChange": "removed"},{"line": "nameTextField.text = wifi.nickname
","lineNumber": 209,"lineChange": "added"},{"line": "wifiNameTextField.text = wifi.networkName
","lineNumber": 210,"lineChange": "added"},{"line": "passwordTextField.text = KeychainWrapper.standard.string(forKey: wifi.passwordID?.uuidString ?? \"No Password\")
","lineNumber": 211,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 14,"cwe": ["CWE-798","CWE-259"]}},{"id": "swift/PT","name": "PT","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details

A Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.

Being able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).

Directory Traversal vulnerabilities can be generally divided into two types:

- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.

`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.

If an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.

```
curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa
```
**Note** `%2e` is the URL encoded version of `.` (dot).

- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.

One way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.

The following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:

```
2018-04-15 22:04:29 .....           19           19  good.txt
2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys
```","text": ""},"properties": {"tags": ["swift","PT","Security","SourceResourceAccess","SourceNetworkRequest","Taint"],"categories": ["Security"],"exampleCommitFixes": [],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 0,"cwe": ["CWE-23"]}},{"id": "swift/InsecureStorage","name": "InsecureStorage","shortDescription": {"text": "Insecure Data Storage"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "
## Details

An organization may need to store and use sensitive information: user data and passwords, corporate intellectual property like trade secrets, employee medical or financial information, and more. In general, the fewer people with access to this information, the better. When this weakness exists, information that has been defined as sensitive is stored in a way that users with minimal or no credentials can access it, either reading it to steal this sensitive information for a number of potential purposes, or writing it to corrupt or delete these important records.

This can occur when valid access control measures have simply not been implemented or when sensitive information is stored in cleartext rather than in encrypted form. Strong access control across your entire environment combined with encryption are the best approaches to avoid this weakness.

## Best practices for prevention
* Prior to development, classify data that will be collected according to how sensitive it is (for example, credit card and SSN data need greater security than your organization's marketing budget); keep the list open-ended but specify clear parameters so it will be easy to classify new data collections.
* During this planning phase, consider whether data being collected is absolutely necessary for business purposes. Question this in particular for personally identifiable information (PII), which is protected by regulations and could lead to fines if stored improperly or breached.
* Understand the environments where sensitive data will be stored, both physical (on-premises data centers, removable media) and virtual (cloud).
* Ensure that data assets are stored and structured logically so it is easy to find and apply security configurations as needed.
* Encrypt all sensitive data for storage to ensure that even if it can be accessed by unauthorized users, data cannot be leaked. However, it can still be deleted, so encryption alone is not a complete solution.
* Implement security controls appropriate for each level of data. Most employees, users, and third parties do not need access to your most sensitive data. Consider using a third-party solution to block access to an endpoint the moment a security event is detected for your most sensitive data.
* Don't depend on your cloud service provider to offer 100% protection for data; verify all governance policies and understand which parties are responsible for which security aspects.
* Create orderly policies for removal and destruction of sensitive data that is no longer needed, such as restoring to factory settings or, in some cases, physical destruction of media.
* Work hand in hand with HR to define efficient processes for creating employee credentials during onboarding and terminating credentials immediately on termination.
* During development, implement strong defenses against common attack types such as SQL/XML injection and brute force, which can trick a server into granting access to sensitive data if it is not properly secured.","text": ""},"properties": {"tags": ["swift","InsecureStorage","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/goranmoomin/HackerNews/commit/dc0e2344f7fcc31059c886b57eee980dc6b3d8d3?diff=split#diff-a07cff0d5bd8434ca22bd53b303abd61484ed77079a461dcc84bfb5f4f852a3eL-1","lines": [{"line": "    static var accounts: [Account] = {
","lineNumber": 9,"lineChange": "removed"},{"line": "        guard let data = UserDefaults.standard.data(forKey: \"Accounts\") else { return [] }
","lineNumber": 10,"lineChange": "removed"},{"line": "        return (try? JSONDecoder().decode([Account].self, from: data)) ?? []
","lineNumber": 11,"lineChange": "removed"},{"line": "    }()
","lineNumber": 12,"lineChange": "removed"},{"line": "    {
","lineNumber": 13,"lineChange": "removed"},{"line": "        didSet {
","lineNumber": 14,"lineChange": "removed"},{"line": "            try! UserDefaults.standard.set(JSONEncoder().encode(accounts), forKey: \"Accounts\")
","lineNumber": 15,"lineChange": "removed"},{"line": "            if accounts.count == 0 { selectedAccountUsername = nil }
","lineNumber": 16,"lineChange": "removed"},{"line": "    static var accountUsernames: [String] {
","lineNumber": 9,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 10,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 11,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 12,"lineChange": "added"},{"line": "            kSecMatchLimit as String: kSecMatchLimitAll, kSecReturnAttributes as String: true,
","lineNumber": 13,"lineChange": "added"},{"line": "        ]
","lineNumber": 14,"lineChange": "added"},{"line": "        var items: CFTypeRef?
","lineNumber": 15,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &items)
","lineNumber": 16,"lineChange": "added"},{"line": "        guard status != errSecItemNotFound else { return [] }
","lineNumber": 17,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 18,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 19,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 20,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 21,"lineChange": "added"},{"line": "            return []
","lineNumber": 22,"lineChange": "added"},{"line": "        }
","lineNumber": 23,"lineChange": "none"},{"line": "        guard let items = items as? [[String: Any]] else { return [] }
","lineNumber": 24,"lineChange": "added"},{"line": "        let usernames = items.compactMap { $0[kSecAttrAccount as String] as? String }.sorted()
","lineNumber": 25,"lineChange": "added"},{"line": "        return usernames
","lineNumber": 26,"lineChange": "added"},{"line": "    }
","lineNumber": 27,"lineChange": "none"},{"line": "
","lineNumber": 28,"lineChange": "none"},{"line": "    static var selectedAccountUsername: String? = {
","lineNumber": 20,"lineChange": "removed"},{"line": "        UserDefaults.standard.string(forKey: \"SelectedAccountUsername\")
","lineNumber": 21,"lineChange": "removed"},{"line": "    }()
","lineNumber": 22,"lineChange": "removed"},{"line": "    {
","lineNumber": 23,"lineChange": "removed"},{"line": "        didSet {
","lineNumber": 24,"lineChange": "removed"},{"line": "            UserDefaults.standard.set(selectedAccountUsername, forKey: \"SelectedAccountUsername\")
","lineNumber": 25,"lineChange": "removed"},{"line": "    static func addAccount(_ account: Account) {
","lineNumber": 29,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 30,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 31,"lineChange": "added"},{"line": "            kSecAttrAccount as String: account.username,
","lineNumber": 32,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 33,"lineChange": "added"},{"line": "            kSecValueData as String: account.password,
","lineNumber": 34,"lineChange": "added"},{"line": "        ]
","lineNumber": 35,"lineChange": "added"},{"line": "        let status = SecItemAdd(query as CFDictionary, nil)
","lineNumber": 36,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 37,"lineChange": "added"},{"line": "            print(\"SecItemAdd return value: \\(status)\")
","lineNumber": 38,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 39,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 40,"lineChange": "added"},{"line": "            return
","lineNumber": 41,"lineChange": "added"},{"line": "        }
","lineNumber": 42,"lineChange": "none"},{"line": "    }
","lineNumber": 43,"lineChange": "none"},{"line": "
","lineNumber": 44,"lineChange": "none"},{"line": "    static func selectAccount(withUsername username: String) {
","lineNumber": 45,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 46,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword, kSecAttrAccount as String: username,
","lineNumber": 47,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 48,"lineChange": "added"},{"line": "            kSecReturnPersistentRef as String: true,
","lineNumber": 49,"lineChange": "added"},{"line": "        ]
","lineNumber": 50,"lineChange": "added"},{"line": "        var item: CFTypeRef?
","lineNumber": 51,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &item)
","lineNumber": 52,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 53,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 54,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 55,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 56,"lineChange": "added"},{"line": "            return
","lineNumber": 57,"lineChange": "added"},{"line": "        }
","lineNumber": 58,"lineChange": "added"},{"line": "        guard let accountRef = item as? Data else { return }
","lineNumber": 59,"lineChange": "added"},{"line": "        selectedAccountRef = accountRef
","lineNumber": 60,"lineChange": "added"},{"line": "    }
","lineNumber": 61,"lineChange": "added"},{"line": "
","lineNumber": 62,"lineChange": "added"},{"line": "    static func removeAccount(withUsername username: String) {
","lineNumber": 63,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 64,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword, kSecAttrAccount as String: username,
","lineNumber": 65,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 66,"lineChange": "added"},{"line": "        ]
","lineNumber": 67,"lineChange": "added"},{"line": "        let status = SecItemDelete(query as CFDictionary)
","lineNumber": 68,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 69,"lineChange": "added"},{"line": "            print(\"SecItemDelete return value: \\(status)\")
","lineNumber": 70,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 71,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 72,"lineChange": "added"},{"line": "            return
","lineNumber": 73,"lineChange": "added"},{"line": "        }
","lineNumber": 74,"lineChange": "added"},{"line": "    }
","lineNumber": 75,"lineChange": "added"},{"line": "
","lineNumber": 76,"lineChange": "added"},{"line": "    static private var selectedAccountRef: Data? {
","lineNumber": 77,"lineChange": "added"},{"line": "        get { UserDefaults.standard.data(forKey: \"SelectedAccountRef\") }
","lineNumber": 78,"lineChange": "added"},{"line": "        set { UserDefaults.standard.set(newValue, forKey: \"SelectedAccountRef\") }
","lineNumber": 79,"lineChange": "added"},{"line": "    }
","lineNumber": 80,"lineChange": "added"},{"line": "
","lineNumber": 81,"lineChange": "added"},{"line": "    static var selectedAccount: Account? {
","lineNumber": 82,"lineChange": "none"},{"line": "        accounts.first(where: { $0.username == selectedAccountUsername })
","lineNumber": 30,"lineChange": "removed"},{"line": "        guard let selectedAccountRef = selectedAccountRef else { return nil }
","lineNumber": 83,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 84,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 85,"lineChange": "added"},{"line": "            kSecMatchItemList as String: [selectedAccountRef] as CFArray,
","lineNumber": 86,"lineChange": "added"},{"line": "            kSecMatchLimit as String: kSecMatchLimitOne, kSecReturnAttributes as String: true,
","lineNumber": 87,"lineChange": "added"},{"line": "            kSecReturnData as String: true,
","lineNumber": 88,"lineChange": "added"},{"line": "        ]
","lineNumber": 89,"lineChange": "added"},{"line": "        var item: CFTypeRef?
","lineNumber": 90,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &item)
","lineNumber": 91,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 92,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 93,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 94,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 95,"lineChange": "added"},{"line": "            return nil
","lineNumber": 96,"lineChange": "added"},{"line": "        }
","lineNumber": 97,"lineChange": "none"},{"line": "        guard let item = item as? [String: Any] else { return nil }
","lineNumber": 98,"lineChange": "added"},{"line": "        print(item)
","lineNumber": 99,"lineChange": "added"},{"line": "        guard let passwordData = item[kSecValueData as String] as? Data,
","lineNumber": 100,"lineChange": "added"},{"line": "            let password = String(data: passwordData, encoding: .utf8),
","lineNumber": 101,"lineChange": "added"},{"line": "            let username = item[kSecAttrAccount as String] as? String
","lineNumber": 102,"lineChange": "added"},{"line": "        else { return nil }
","lineNumber": 103,"lineChange": "added"},{"line": "        return Account(username: username, password: password)
","lineNumber": 104,"lineChange": "added"},{"line": "    }
","lineNumber": 105,"lineChange": "added"},{"line": "
","lineNumber": 106,"lineChange": "added"},{"line": "    static var selectedAccountIndex: Int? {
","lineNumber": 107,"lineChange": "none"},{"line": "        accounts.firstIndex(where: { $0.username == selectedAccountUsername })
","lineNumber": 33,"lineChange": "removed"},{"line": "        accountUsernames.firstIndex { $0 == selectedAccount?.username }
","lineNumber": 108,"lineChange": "added"}]},{"commitURL": "https://github.com/goranmoomin/HackerNews/commit/dc0e2344f7fcc31059c886b57eee980dc6b3d8d3?diff=split#diff-a07cff0d5bd8434ca22bd53b303abd61484ed77079a461dcc84bfb5f4f852a3eL-1","lines": [{"line": "    static var accounts: [Account] = {
","lineNumber": 9,"lineChange": "removed"},{"line": "        guard let data = UserDefaults.standard.data(forKey: \"Accounts\") else { return [] }
","lineNumber": 10,"lineChange": "removed"},{"line": "        return (try? JSONDecoder().decode([Account].self, from: data)) ?? []
","lineNumber": 11,"lineChange": "removed"},{"line": "    }()
","lineNumber": 12,"lineChange": "removed"},{"line": "    {
","lineNumber": 13,"lineChange": "removed"},{"line": "        didSet {
","lineNumber": 14,"lineChange": "removed"},{"line": "            try! UserDefaults.standard.set(JSONEncoder().encode(accounts), forKey: \"Accounts\")
","lineNumber": 15,"lineChange": "removed"},{"line": "            if accounts.count == 0 { selectedAccountUsername = nil }
","lineNumber": 16,"lineChange": "removed"},{"line": "    static var accountUsernames: [String] {
","lineNumber": 9,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 10,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 11,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 12,"lineChange": "added"},{"line": "            kSecMatchLimit as String: kSecMatchLimitAll, kSecReturnAttributes as String: true,
","lineNumber": 13,"lineChange": "added"},{"line": "        ]
","lineNumber": 14,"lineChange": "added"},{"line": "        var items: CFTypeRef?
","lineNumber": 15,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &items)
","lineNumber": 16,"lineChange": "added"},{"line": "        guard status != errSecItemNotFound else { return [] }
","lineNumber": 17,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 18,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 19,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 20,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 21,"lineChange": "added"},{"line": "            return []
","lineNumber": 22,"lineChange": "added"},{"line": "        }
","lineNumber": 23,"lineChange": "none"},{"line": "        guard let items = items as? [[String: Any]] else { return [] }
","lineNumber": 24,"lineChange": "added"},{"line": "        let usernames = items.compactMap { $0[kSecAttrAccount as String] as? String }.sorted()
","lineNumber": 25,"lineChange": "added"},{"line": "        return usernames
","lineNumber": 26,"lineChange": "added"},{"line": "    }
","lineNumber": 27,"lineChange": "none"},{"line": "
","lineNumber": 28,"lineChange": "none"},{"line": "    static var selectedAccountUsername: String? = {
","lineNumber": 20,"lineChange": "removed"},{"line": "        UserDefaults.standard.string(forKey: \"SelectedAccountUsername\")
","lineNumber": 21,"lineChange": "removed"},{"line": "    }()
","lineNumber": 22,"lineChange": "removed"},{"line": "    {
","lineNumber": 23,"lineChange": "removed"},{"line": "        didSet {
","lineNumber": 24,"lineChange": "removed"},{"line": "            UserDefaults.standard.set(selectedAccountUsername, forKey: \"SelectedAccountUsername\")
","lineNumber": 25,"lineChange": "removed"},{"line": "    static func addAccount(_ account: Account) {
","lineNumber": 29,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 30,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 31,"lineChange": "added"},{"line": "            kSecAttrAccount as String: account.username,
","lineNumber": 32,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 33,"lineChange": "added"},{"line": "            kSecValueData as String: account.password,
","lineNumber": 34,"lineChange": "added"},{"line": "        ]
","lineNumber": 35,"lineChange": "added"},{"line": "        let status = SecItemAdd(query as CFDictionary, nil)
","lineNumber": 36,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 37,"lineChange": "added"},{"line": "            print(\"SecItemAdd return value: \\(status)\")
","lineNumber": 38,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 39,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 40,"lineChange": "added"},{"line": "            return
","lineNumber": 41,"lineChange": "added"},{"line": "        }
","lineNumber": 42,"lineChange": "none"},{"line": "    }
","lineNumber": 43,"lineChange": "none"},{"line": "
","lineNumber": 44,"lineChange": "none"},{"line": "    static func selectAccount(withUsername username: String) {
","lineNumber": 45,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 46,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword, kSecAttrAccount as String: username,
","lineNumber": 47,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 48,"lineChange": "added"},{"line": "            kSecReturnPersistentRef as String: true,
","lineNumber": 49,"lineChange": "added"},{"line": "        ]
","lineNumber": 50,"lineChange": "added"},{"line": "        var item: CFTypeRef?
","lineNumber": 51,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &item)
","lineNumber": 52,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 53,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 54,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 55,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 56,"lineChange": "added"},{"line": "            return
","lineNumber": 57,"lineChange": "added"},{"line": "        }
","lineNumber": 58,"lineChange": "added"},{"line": "        guard let accountRef = item as? Data else { return }
","lineNumber": 59,"lineChange": "added"},{"line": "        selectedAccountRef = accountRef
","lineNumber": 60,"lineChange": "added"},{"line": "    }
","lineNumber": 61,"lineChange": "added"},{"line": "
","lineNumber": 62,"lineChange": "added"},{"line": "    static func removeAccount(withUsername username: String) {
","lineNumber": 63,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 64,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword, kSecAttrAccount as String: username,
","lineNumber": 65,"lineChange": "added"},{"line": "            kSecAttrServer as String: \"news.ycombinator.com\",
","lineNumber": 66,"lineChange": "added"},{"line": "        ]
","lineNumber": 67,"lineChange": "added"},{"line": "        let status = SecItemDelete(query as CFDictionary)
","lineNumber": 68,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 69,"lineChange": "added"},{"line": "            print(\"SecItemDelete return value: \\(status)\")
","lineNumber": 70,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 71,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 72,"lineChange": "added"},{"line": "            return
","lineNumber": 73,"lineChange": "added"},{"line": "        }
","lineNumber": 74,"lineChange": "added"},{"line": "    }
","lineNumber": 75,"lineChange": "added"},{"line": "
","lineNumber": 76,"lineChange": "added"},{"line": "    static private var selectedAccountRef: Data? {
","lineNumber": 77,"lineChange": "added"},{"line": "        get { UserDefaults.standard.data(forKey: \"SelectedAccountRef\") }
","lineNumber": 78,"lineChange": "added"},{"line": "        set { UserDefaults.standard.set(newValue, forKey: \"SelectedAccountRef\") }
","lineNumber": 79,"lineChange": "added"},{"line": "    }
","lineNumber": 80,"lineChange": "added"},{"line": "
","lineNumber": 81,"lineChange": "added"},{"line": "    static var selectedAccount: Account? {
","lineNumber": 82,"lineChange": "none"},{"line": "        accounts.first(where: { $0.username == selectedAccountUsername })
","lineNumber": 30,"lineChange": "removed"},{"line": "        guard let selectedAccountRef = selectedAccountRef else { return nil }
","lineNumber": 83,"lineChange": "added"},{"line": "        let query: [String: Any] = [
","lineNumber": 84,"lineChange": "added"},{"line": "            kSecClass as String: kSecClassInternetPassword,
","lineNumber": 85,"lineChange": "added"},{"line": "            kSecMatchItemList as String: [selectedAccountRef] as CFArray,
","lineNumber": 86,"lineChange": "added"},{"line": "            kSecMatchLimit as String: kSecMatchLimitOne, kSecReturnAttributes as String: true,
","lineNumber": 87,"lineChange": "added"},{"line": "            kSecReturnData as String: true,
","lineNumber": 88,"lineChange": "added"},{"line": "        ]
","lineNumber": 89,"lineChange": "added"},{"line": "        var item: CFTypeRef?
","lineNumber": 90,"lineChange": "added"},{"line": "        let status = SecItemCopyMatching(query as CFDictionary, &item)
","lineNumber": 91,"lineChange": "added"},{"line": "        guard status == errSecSuccess else {
","lineNumber": 92,"lineChange": "added"},{"line": "            print(\"SecItemCopyMatching return value: \\(status)\")
","lineNumber": 93,"lineChange": "added"},{"line": "            let statusString = SecCopyErrorMessageString(status, nil)
","lineNumber": 94,"lineChange": "added"},{"line": "            print(statusString ?? \"Unknown status code.\")
","lineNumber": 95,"lineChange": "added"},{"line": "            return nil
","lineNumber": 96,"lineChange": "added"},{"line": "        }
","lineNumber": 97,"lineChange": "none"},{"line": "        guard let item = item as? [String: Any] else { return nil }
","lineNumber": 98,"lineChange": "added"},{"line": "        print(item)
","lineNumber": 99,"lineChange": "added"},{"line": "        guard let passwordData = item[kSecValueData as String] as? Data,
","lineNumber": 100,"lineChange": "added"},{"line": "            let password = String(data: passwordData, encoding: .utf8),
","lineNumber": 101,"lineChange": "added"},{"line": "            let username = item[kSecAttrAccount as String] as? String
","lineNumber": 102,"lineChange": "added"},{"line": "        else { return nil }
","lineNumber": 103,"lineChange": "added"},{"line": "        return Account(username: username, password: password)
","lineNumber": 104,"lineChange": "added"},{"line": "    }
","lineNumber": 105,"lineChange": "added"},{"line": "
","lineNumber": 106,"lineChange": "added"},{"line": "    static var selectedAccountIndex: Int? {
","lineNumber": 107,"lineChange": "none"},{"line": "        accounts.firstIndex(where: { $0.username == selectedAccountUsername })
","lineNumber": 33,"lineChange": "removed"},{"line": "        accountUsernames.firstIndex { $0 == selectedAccount?.username }
","lineNumber": 108,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 1,"cwe": ["CWE-922"]}}]}},"results": [{"ruleId": "javascript/ImproperCodeSanitization","ruleIndex": 0,"level": "warning","message": {"text":"Data that flows into Function is incorrectly sanitized with stringify. stringify is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","markdown":"Data that {0} into {1} is incorrectly sanitized with {2}. {3} is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)","[Function](19)","[stringify](20)","[stringify](21)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}  }}],"fingerprints": {"1": "1b7bd006.f86e89cd.607187b5.7da15f0a.ef9f7d82.8020cfdf.cd61fc56.f4efc7da.fe8244fc.f86e89cd.50513ec7.2bf99d79.8b1766b3.e729b0ee.f0256597.40e83381","snyk/asset/finding/v1": "5b79f39d-ce0d-4597-9050-cb414eb700a1","identity": "5b79f39d-ce0d-4597-9050-cb414eb700a1","0": "f2d67bfcd52f0d01d0f9395785242392f501b8b8da541007ce2162c8571acade"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":32,  "endColumn":46}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":65}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":72}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":520,  "startColumn":13,  "endColumn":32}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":61}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":20}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":27}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":523,  "startColumn":13,  "endColumn":24}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":28}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":35}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":16}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":23}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":7,  "endColumn":23}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":75,  "endColumn":78}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 21,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 314,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  }]}},{"ruleId": "javascript/ImproperCodeSanitization","ruleIndex": 0,"level": "warning","message": {"text":"Data that flows into Function is incorrectly sanitized with stringify. stringify is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","markdown":"Data that {0} into {1} is incorrectly sanitized with {2}. {3} is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)","[Function](19)","[stringify](20)","[stringify](21)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}  }}],"fingerprints": {"identity": "76105f25-4ab9-472a-b192-fbe52e3182aa","0": "e98dc4453292712df33864bcc094325abceacf547d8e5284c693868dc6004dd0","1": "1b7bd006.f86e89cd.607187b5.7da15f0a.ef9f7d82.8020cfdf.cd61fc56.f4efc7da.fe8244fc.f86e89cd.50513ec7.2bf99d79.8b1766b3.e729b0ee.f0256597.40e83381","snyk/asset/finding/v1": "76105f25-4ab9-472a-b192-fbe52e3182aa"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":32,  "endColumn":46}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":65}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":72}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":520,  "startColumn":13,  "endColumn":32}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":61}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":20}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":27}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":523,  "startColumn":13,  "endColumn":24}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":28}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":35}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":16}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":23}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":7,  "endColumn":23}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":75,  "endColumn":78}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 21,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/A/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 314,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  }]}},{"ruleId": "javascript/ImproperCodeSanitization","ruleIndex": 0,"level": "warning","message": {"text":"Data that flows into Function is incorrectly sanitized with stringify. stringify is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","markdown":"Data that {0} into {1} is incorrectly sanitized with {2}. {3} is inappropriate for defending against this kind of vulnerability, special characters need to be specifically escaped.","arguments": ["[flows](0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)","[Function](19)","[stringify](20)","[stringify](21)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}  }}],"fingerprints": {"snyk/asset/finding/v1": "d9aa6e62-8a80-4f9b-981a-36473923a644","identity": "d9aa6e62-8a80-4f9b-981a-36473923a644","0": "98e877ef066fdb33e0941068cf064fc62bfb02b259cb918c18977f65690eb64b","1": "1b7bd006.f86e89cd.607187b5.7da15f0a.ef9f7d82.8020cfdf.cd61fc56.f4efc7da.fe8244fc.f86e89cd.50513ec7.2bf99d79.8b1766b3.e729b0ee.f0256597.40e83381"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":32,  "endColumn":46}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":65}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":519,  "startColumn":13,  "endColumn":72}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":520,  "startColumn":13,  "endColumn":32}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":61}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":521,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":20}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":522,  "startColumn":13,  "endColumn":27}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":523,  "startColumn":13,  "endColumn":24}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":28}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":524,  "startColumn":13,  "endColumn":35}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":67}}}},{"location": {"id": 14,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":525,  "startColumn":13,  "endColumn":74}}}},{"location": {"id": 15,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":16}}}},{"location": {"id": 16,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":13,  "endColumn":23}}}},{"location": {"id": 17,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":518,  "endLine":526,  "startColumn":7,  "endColumn":23}}}},{"location": {"id": 18,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":75,  "endColumn":78}}}},{"location": {"id": 19,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":548,  "endLine":548,  "startColumn":16,  "endColumn":24}}}},{"location": {"id": 20,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}},{"location": {"id": 21,"physicalLocation": {"artifactLocation": {  "uri": "buildScripts/sourcery/Sourcery.app/Contents/Frameworks/SourceryJS.framework/Versions/Current/Resources/ejs.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":519,  "endLine":519,  "startColumn":37,  "endColumn":46}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 314,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  }]}},{"ruleId": "swift/HardcodedNonCryptoSecret","ruleIndex": 1,"level": "error","message": {"text":"Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.","markdown":"Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.","arguments": ["[a hardcoded string](0)","[here](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "SecretObfuscation.playground/Contents.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":16,  "endLine":16,  "startColumn":5,  "endColumn":17}  }}],"fingerprints": {"1": "673d5243.5f5df4f9.0934ac1d.821a8846.876e2b74.b2d01be3.75370815.f4889d3e.673d5243.5f5df4f9.4be909ee.821a8846.876e2b74.b2d01be3.75370815.f4889d3e","snyk/asset/finding/v1": "a27d41c7-0f1a-48f2-945f-9b7219c653b6","identity": "a27d41c7-0f1a-48f2-945f-9b7219c653b6","0": "e74b1459dc83cfa9a4cbbd647769aa3ecede9bb9cc2c8efaecc8023696f3f943"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "SecretObfuscation.playground/Contents.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":16,  "endLine":16,  "startColumn":21,  "endColumn":57}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "SecretObfuscation.playground/Contents.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":16,  "endLine":16,  "startColumn":5,  "endColumn":17}}}}]}]}],"suppressions" : [{"guid": "a007e382-54b1-4deb-b5a5-afa1268ab158","status": "accepted","justification": "https://apps.powerapps.com/play/e/default-a9074c6b-7e60-44d7-bc9b-447473ca5476/a/74dff77c-5c40-4ba2-ad1f-909105272f62?tenantId=a9074c6b-7e60-44d7-bc9b-447473ca5476&screenId=AuditScreen&ItemID=60%0D%0A%0D%0A%0D%0A","kind": "external","properties": {"category": "not-vulnerable","ignoredOn": "2025-06-26T14:48:55.357Z","ignoredBy": {  "name": "KorayAkcabal@adt.com",  "email": "KorayAkcabal@adt.com"}}}],"properties": {"isAutofixable": false,"priorityScore": 755,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in changePassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[changePassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":14,  "endColumn":28}  }}],"fingerprints": {"0": "4c011e3f026a78415601af4f071ae5e0d2bedd9803be379166b4fc12b3e86a83","1": "ab457ff9.5f5df4f9.0934ac1d.e85749f0.876e2b74.a6157dc5.d3ed79b4.f4889d3e.ab457ff9.5f5df4f9.4be909ee.e85749f0.876e2b74.a6157dc5.c8832359.f4889d3e","snyk/asset/finding/v1": "ca9533cc-697d-4d3a-9652-4ad19c860cc1","identity": "ca9533cc-697d-4d3a-9652-4ad19c860cc1"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":32,  "endColumn":46}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":14,  "endColumn":28}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in AccessibilityIDs.changePassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[AccessibilityIDs.changePassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":300,  "endLine":300,  "startColumn":16,  "endColumn":47}  }}],"fingerprints": {"identity": "08fc9553-e5e1-4c00-90f0-22d9e52f8156","0": "e0a3463b791f11800b4e327f26e73d442df5d964e81828e3c1e7b926c4544f24","1": "673d5243.22a9c66f.ff30e84c.821a8846.d04159ae.b2d01be3.c8832359.c9290bb1.673d5243.22a9c66f.ff30e84c.821a8846.876e2b74.b2d01be3.c8832359.cc4783ec","snyk/asset/finding/v1": "08fc9553-e5e1-4c00-90f0-22d9e52f8156"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":69,  "endLine":69,  "startColumn":32,  "endColumn":46}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Users/UsersMyProfile/UserMyProfileViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":300,  "endLine":300,  "startColumn":16,  "endColumn":47}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/PT","ruleIndex": 3,"level": "error","message": {"text":"Unsanitized input from data from a remote resource flows into moveItem, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3)","[moveItem](4)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":332,  "endLine":332,  "startColumn":9,  "endColumn":37}  }}],"fingerprints": {"identity": "c0f5497c-26ca-4b0f-971e-63aeae34ae73","0": "d1f406aa14d2611bcbb3619bd84962aeb8720a05d1b88641390607ed5454f0b1","1": "d062b44b.22a9c66f.ff30e84c.821a8846.19ed419c.38cd7d96.22412d73.701769e6.ad87cf54.22a9c66f.438ea0a7.81bba577.b38f7eba.58996077.85b709b0.701769e6","snyk/asset/finding/v1": "c0f5497c-26ca-4b0f-971e-63aeae34ae73"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":307,  "endLine":307,  "startColumn":74,  "endColumn":83}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":307,  "endLine":307,  "startColumn":74,  "endColumn":83}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":332,  "endLine":332,  "startColumn":42,  "endColumn":50}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":332,  "endLine":332,  "startColumn":38,  "endColumn":51}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "ADTplusServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":332,  "endLine":332,  "startColumn":9,  "endColumn":37}}}}]}]}],"suppressions" : [{"guid": "35f12f7a-4669-40e3-9888-a41907c13886","status": "accepted","justification": "The file paths involved are OS-generated and do not incorporate any user or network input thus path traversal is not possible in this context.","kind": "external","properties": {"category": "temporary-ignore","expiration": "2026-05-01T04:00:00.000Z","ignoredOn": "2025-06-26T14:48:55.382Z","ignoredBy": {  "name": "KorayAkcabal@adt.com",  "email": "KorayAkcabal@adt.com"}}}],"properties": {"isAutofixable": false,"priorityScore": 559,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  }]}},{"ruleId": "swift/PT","ruleIndex": 3,"level": "error","message": {"text":"Unsanitized input from data from a remote resource flows into moveItem, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.","arguments": ["[data from a remote resource](0)","[flows](1),(2),(3)","[moveItem](4)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":191,  "endLine":191,  "startColumn":10,  "endColumn":38}  }}],"fingerprints": {"identity": "a64c6d7a-3533-40d6-898a-8304ba5a8649","0": "32bb2ca5300ad13b6aec9954634335c1d4a8f6a5cc201ca476b6b3d3cc879540","1": "d062b44b.22a9c66f.ff30e84c.821a8846.19ed419c.38cd7d96.22412d73.701769e6.ad87cf54.22a9c66f.438ea0a7.24f44434.19ed419c.38cd7d96.85b709b0.701769e6","snyk/asset/finding/v1": "a64c6d7a-3533-40d6-898a-8304ba5a8649"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":185,  "endLine":185,  "startColumn":62,  "endColumn":71}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":185,  "endLine":185,  "startColumn":62,  "endColumn":71}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":191,  "endLine":191,  "startColumn":43,  "endColumn":51}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":191,  "endLine":191,  "startColumn":39,  "endColumn":52}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "LifeShieldServiceExt/NotificationService.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":191,  "endLine":191,  "startColumn":10,  "endColumn":38}}}}]}]}],"suppressions" : [{"guid": "9a52e8b8-40b3-4a78-9513-0fe787f5c874","status": "accepted","justification": "The file paths involved are OS-generated and do not incorporate any user or network input thus path traversal is not possible in this context.","kind": "external","properties": {"category": "temporary-ignore","expiration": "2026-05-01T04:00:00.000Z","ignoredOn": "2025-06-26T14:48:55.388Z","ignoredBy": {  "name": "KorayAkcabal@adt.com",  "email": "KorayAkcabal@adt.com"}}}],"properties": {"isAutofixable": false,"priorityScore": 559,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  }]}},{"ruleId": "swift/InsecureStorage","ruleIndex": 4,"level": "note","message": {"text":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","markdown":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","arguments": []},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Billing/ViewControllers/BillingDeveloperSettingsVC.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":116,  "endLine":116,  "startColumn":3,  "endColumn":41}  }}],"fingerprints": {"identity": "287cd153-e4b8-457a-b0bc-7999f9867ddb","0": "3d61b279defd5a64f77d73e899f46dc0994ce8d7740e323fb2c20c8dc1a3b231","1": "6ca82227.57ed56e6.438ea0a7.821a8846.51077cea.b9db9ec8.85b709b0.351fd3d3.6ca82227.57ed56e6.438ea0a7.f1c7dd52.51077cea.2f4e1548.d264ac54.351fd3d3","snyk/asset/finding/v1": "287cd153-e4b8-457a-b0bc-7999f9867ddb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Billing/ViewControllers/BillingDeveloperSettingsVC.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":116,  "endLine":116,  "startColumn":3,  "endColumn":41}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 372,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/InsecureStorage","ruleIndex": 4,"level": "note","message": {"text":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","markdown":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","arguments": []},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Onboarding/OnboardingCoordinator.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":210,  "endLine":210,  "startColumn":3,  "endColumn":28}  }}],"fingerprints": {"identity": "a167b53f-d100-46c4-ab3f-773fab210f42","0": "9c1a0c5fc46fc5ce5cb403f722cdf7c8ae66f83612ef106b5dae496c196788c9","1": "673d5243.57ed56e6.3eeaf6d2.564b19e3.547201e6.b2d01be3.e0f033d0.863f0cfa.4a3385d1.22a9c66f.ff30e84c.9999aea0.547201e6.61fb513a.d264ac54.f4889d3e","snyk/asset/finding/v1": "a167b53f-d100-46c4-ab3f-773fab210f42"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Onboarding/OnboardingCoordinator.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":210,  "endLine":210,  "startColumn":3,  "endColumn":28}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 422,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/InsecureStorage","ruleIndex": 4,"level": "note","message": {"text":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","markdown":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","arguments": []},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Menu/SettingsMainMenu/SettingsMainMenuViewModel.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":562,  "endLine":562,  "startColumn":4,  "endColumn":42}  }}],"fingerprints": {"identity": "73fb4f42-cd0d-4e3b-8669-d68a4460eb85","0": "2fad0b63da2262df7dcdc0bfde7e696a77c8d3b486b49ae1ed490611aa766cdc","1": "1501b15c.22a9c66f.438ea0a7.821a8846.96543136.b9db9ec8.85b709b0.351fd3d3.1501b15c.22a9c66f.438ea0a7.f1c7dd52.96543136.2f4e1548.d264ac54.351fd3d3","snyk/asset/finding/v1": "73fb4f42-cd0d-4e3b-8669-d68a4460eb85"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Menu/SettingsMainMenu/SettingsMainMenuViewModel.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":562,  "endLine":562,  "startColumn":4,  "endColumn":42}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 372,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/InsecureStorage","ruleIndex": 4,"level": "note","message": {"text":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","markdown":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","arguments": []},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/TrustedNeighborShared/TNCommonConstants.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":280,  "endLine":280,  "startColumn":4,  "endColumn":29}  }}],"fingerprints": {"1": "673d5243.57ed56e6.3eeaf6d2.564b19e3.547201e6.b2d01be3.e0f033d0.863f0cfa.2d06e3d6.22a9c66f.ff30e84c.7ca80717.547201e6.5e9634dd.d264ac54.f4889d3e","snyk/asset/finding/v1": "03d38850-6ed8-4c78-9ea5-79192976e561","identity": "03d38850-6ed8-4c78-9ea5-79192976e561","0": "8b14706e4aa52ce81411fa9a2c92844a19abf667ab0a68379a576e27f2bdbc5a"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/TrustedNeighborShared/TNCommonConstants.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":280,  "endLine":280,  "startColumn":4,  "endColumn":29}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 372,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/InsecureStorage","ruleIndex": 4,"level": "note","message": {"text":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","markdown":"Plaintext data was stored locally on the filesystem. If the devices filesystem was accessed, an attacker could access potentially sensitive application or personal data.","arguments": []},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Utils/GeoCodeHelper.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":87,  "endLine":87,  "startColumn":6,  "endColumn":31}  }}],"fingerprints": {"identity": "b5b5460a-654a-459f-99a8-32451d8705cf","0": "6f72438f0cb89438a1982d95a898fd985c30d85dcfb0b06bbff1c580850bbfb4","1": "673d5243.57ed56e6.3eeaf6d2.564b19e3.547201e6.b2d01be3.e0f033d0.863f0cfa.4313e37d.22a9c66f.f803813c.564b19e3.547201e6.0cfecdcf.f0ba46c3.8f174461","snyk/asset/finding/v1": "b5b5460a-654a-459f-99a8-32451d8705cf"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Utils/GeoCodeHelper.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":87,  "endLine":87,  "startColumn":6,  "endColumn":31}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 372,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in password.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[password](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":286,  "endLine":286,  "startColumn":4,  "endColumn":23}  }}],"fingerprints": {"identity": "0746d19e-b845-472f-a84e-46fe288152e5","0": "440ade934275eb568eb2be272cb7a06db2ce621cf2a583c3209c564271ef331e","1": "1501b15c.22a9c66f.438ea0a7.821a8846.19ed419c.b2d01be3.fcb8b9b3.4e4a261c.1501b15c.22a9c66f.438ea0a7.af42959c.876e2b74.ec16cefb.fcb8b9b3.cc4783ec","snyk/asset/finding/v1": "0746d19e-b845-472f-a84e-46fe288152e5"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":294,  "endLine":294,  "startColumn":22,  "endColumn":32}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":286,  "endLine":286,  "startColumn":4,  "endColumn":23}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in text.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[text](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":294,  "endLine":294,  "startColumn":14,  "endColumn":18}  }}],"fingerprints": {"1": "6ca82227.ac0496c6.438ea0a7.af42959c.876e2b74.3cf1fe5e.85b709b0.b68635a9.ac3ecf5f.57ed56e6.438ea0a7.af42959c.876e2b74.58996077.85b709b0.cc4783ec","snyk/asset/finding/v1": "d1ef245b-502e-414a-86f0-40a510464f4d","identity": "d1ef245b-502e-414a-86f0-40a510464f4d","0": "06a7ca5262a31481523068789b470f60c8c861085bbf6ae157a30ce515e764cb"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":294,  "endLine":294,  "startColumn":22,  "endColumn":32}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Add%20Device/Add%20Camera/QR/Doorbells/SCD1R0/AddDoorbellWifiSettingsViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":294,  "endLine":294,  "startColumn":14,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Onboarding/OnboardingCoordinator.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":95,  "endLine":95,  "startColumn":14,  "endColumn":28}  }}],"fingerprints": {"identity": "73072a17-6484-43cb-bdcd-06b4b915d016","0": "93755cdccdab5bf2eddb169131c827c601e8bb95a7074b752b826c07d5cfe535","1": "c3cf0fa0.5f5df4f9.0934ac1d.8b92148c.876e2b74.4ef74b16.75370815.f4889d3e.c3cf0fa0.5f5df4f9.4be909ee.8b92148c.876e2b74.4ef74b16.75370815.f4889d3e","snyk/asset/finding/v1": "73072a17-6484-43cb-bdcd-06b4b915d016"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Onboarding/OnboardingCoordinator.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":95,  "endLine":95,  "startColumn":32,  "endColumn":51}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Onboarding/OnboardingCoordinator.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":95,  "endLine":95,  "startColumn":14,  "endColumn":28}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":13,  "endColumn":27}  }}],"fingerprints": {"identity": "6f9e1a24-8956-4d56-8529-69a41a50b8aa","0": "c726eceb99de680e826711bbcad1f0a5c3d0f0db9ba3133b96c0b8eac93ee15e","1": "c3cf0fa0.401f81bb.0934ac1d.ea14444b.876e2b74.4ef74b16.75370815.f4889d3e.c3cf0fa0.401f81bb.4be909ee.101b868d.876e2b74.4ef74b16.75370815.f4889d3e","snyk/asset/finding/v1": "6f9e1a24-8956-4d56-8529-69a41a50b8aa"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":31,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":13,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":21,  "endLine":21,  "startColumn":13,  "endColumn":27}  }}],"fingerprints": {"identity": "9ed99976-8976-43f5-9145-f2b8c68a05b2","0": "541496df759247fa27613731140bb2d29f28aa0b2e056b069de3205aa638105a","1": "c3cf0fa0.5f5df4f9.0934ac1d.8b92148c.876e2b74.4ef74b16.75370815.f4889d3e.c3cf0fa0.5f5df4f9.4be909ee.8b92148c.876e2b74.4ef74b16.75370815.f4889d3e","snyk/asset/finding/v1": "9ed99976-8976-43f5-9145-f2b8c68a05b2"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":21,  "endLine":21,  "startColumn":31,  "endColumn":50}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":21,  "endLine":21,  "startColumn":13,  "endColumn":27}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in verbalPasswordField.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[verbalPasswordField](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":47,  "endLine":47,  "startColumn":13,  "endColumn":32}  }}],"fingerprints": {"identity": "06431e99-1fc0-4766-989d-eee218becd8e","0": "bdb58820f4cfb9306f5726153c482e23a7cbc911a65d49e018369a9056c7774c","1": "ab457ff9.e3808abf.0934ac1d.ea14444b.876e2b74.9af3862d.75370815.f4889d3e.59be0025.e3808abf.4be909ee.ea14444b.876e2b74.9af3862d.75370815.f4889d3e","snyk/asset/finding/v1": "06431e99-1fc0-4766-989d-eee218becd8e"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":47,  "endLine":47,  "startColumn":36,  "endColumn":55}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":47,  "endLine":47,  "startColumn":13,  "endColumn":32}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in AccessibilityIDs.verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[AccessibilityIDs.verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":145,  "endLine":145,  "startColumn":8,  "endColumn":39}  }}],"fingerprints": {"snyk/asset/finding/v1": "6339c79b-f3f1-478c-a60d-8a0da3d50671","identity": "6339c79b-f3f1-478c-a60d-8a0da3d50671","0": "d419336548b8dcf0ec80ac11889257a5fd6e1936be8fa6387ebf478e972b9cd5","1": "673d5243.22a9c66f.ff30e84c.821a8846.19ed419c.b2d01be3.cf99dc42.c9290bb1.673d5243.22a9c66f.ff30e84c.821a8846.876e2b74.b2d01be3.cf99dc42.cc4783ec"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":41,  "endLine":41,  "startColumn":31,  "endColumn":45}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":145,  "endLine":145,  "startColumn":8,  "endColumn":39}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in AccessibilityIDs.verbalPasswordField.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[AccessibilityIDs.verbalPasswordField](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":158,  "endLine":158,  "startColumn":35,  "endColumn":71}  }}],"fingerprints": {"0": "573507719deca1d3f1a334af8b128823ba5ea1431e027a0772e1035aea57e03a","1": "3c945d5d.57ed56e6.438ea0a7.821a8846.e92eefb6.53bf3545.85b709b0.bc32f1e7.3c945d5d.e3808abf.438ea0a7.821a8846.876e2b74.42265176.85b709b0.bc32f1e7","snyk/asset/finding/v1": "6bd8ccbd-ec5e-462c-bed9-53fe8e5d6bb4","identity": "6bd8ccbd-ec5e-462c-bed9-53fe8e5d6bb4"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":47,  "endLine":47,  "startColumn":36,  "endColumn":55}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactEditOrAddViewController.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":158,  "endLine":158,  "startColumn":35,  "endColumn":71}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in EmergencyContactEndpoint.verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[EmergencyContactEndpoint.verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":50,  "endLine":50,  "startColumn":6,  "endColumn":45}  }}],"fingerprints": {"0": "600355c8defd799b1ebdb322e5e8e3b9e6180414c6b8a66a7b8bf53f03abc3ae","1": "673d5243.22a9c66f.ff30e84c.821a8846.19ed419c.0a08bb9b.cf99dc42.59b7ff95.673d5243.22a9c66f.ff30e84c.821a8846.876e2b74.0a08bb9b.cf99dc42.cc4783ec","snyk/asset/finding/v1": "d36ee307-44ea-466f-8792-b32f2e43906c","identity": "d36ee307-44ea-466f-8792-b32f2e43906c"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":21,  "endLine":21,  "startColumn":31,  "endColumn":50}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":50,  "endLine":50,  "startColumn":6,  "endColumn":45}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "swift/NoHardcodedPasswords","ruleIndex": 2,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in EmergencyContactEndpoint.verbalPassword.","markdown":"Do not hardcode passwords in code. Found {0} password used in {1}.","arguments": ["[hardcoded](0)","[EmergencyContactEndpoint.verbalPassword](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":100,  "endLine":100,  "startColumn":19,  "endColumn":58}  }}],"fingerprints": {"identity": "1d24ad9e-18e3-452c-9481-088fac9e8056","0": "c0258e712888160bb3883d2aa5f2c761637fba887da7e52132db0e2eca961df7","1": "c4339597.22a9c66f.ff30e84c.1b44cb8f.19ed419c.0a08bb9b.cf99dc42.59b7ff95.c4339597.22a9c66f.ff30e84c.1b44cb8f.876e2b74.0a08bb9b.cf99dc42.cc4783ec","snyk/asset/finding/v1": "1d24ad9e-18e3-452c-9481-088fac9e8056"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":21,  "endLine":21,  "startColumn":31,  "endColumn":50}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "LifeView/Settings/Monitoring/EmergencyContacts/EmergencyContactNetworkManager.swift",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":100,  "endLine":100,  "startColumn":19,  "endColumn":58}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 603,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 270,"isSupported": true,"lang": ".h","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": ".html","type": "SUPPORTED"},{"files": 3,"isSupported": true,"lang": ".js","type": "SUPPORTED"},{"files": 3,"isSupported": true,"lang": ".py","type": "SUPPORTED"},{"files": 3,"isSupported": true,"lang": ".rb","type": "SUPPORTED"},{"files": 2037,"isSupported": true,"lang": ".swift","type": "SUPPORTED"},{"files": 7,"isSupported": false,"lang": ".h","type": "FAILED_PARSING"}]}}]}